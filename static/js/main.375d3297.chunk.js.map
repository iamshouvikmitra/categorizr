{"version":3,"sources":["Categories.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["Categories","state","items","_this2","this","props","data","map","item","react_default","a","createElement","className","key","id","onClick","handleClick","dangerouslySetInnerHTML","__html","name","Component","Header","elem","document","querySelector","M","Sidenav","init","edge","inDuration","href","style","paddingRight","paddingLeft","data-target","App","posts","website","loading","handleChange","e","_this","setState","target","value","console","log","axios","get","then","response","catch","error","handleSubmit","preventDefault","post","title","rendered","excerpt","link","rel","src_Header","action","onSubmit","type","placeholder","onChange","htmlFor","src_Categories","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.375d3297.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Categories extends Component {\r\n    state = {\r\n        items: null\r\n    }\r\n\r\n    render() {\r\n        let items = this.props.items\r\n        let data = items ? (\r\n            items.map(item=>{\r\n                return(\r\n                    <div className=\"chip\" key={item.id} onClick={()=>{this.props.handleClick(item.id)}} dangerouslySetInnerHTML={{__html: item.name}}>\r\n                    </div>      \r\n                )\r\n            })\r\n        ) : (\r\n            <div className=\"chip\">\r\n            No Categories Yet\r\n            </div>\r\n            )\r\n        return (\r\n            <div className=\"container\">\r\n                {data}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Categories;","import React, { Component } from 'react';\r\nimport M from \"materialize-css/dist/js/materialize.min.js\";\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount() {\r\n        var elem = document.querySelector(\".sidenav\");\r\n        var instance = M.Sidenav.init(elem, {\r\n            edge: \"left\",\r\n            inDuration: 250\r\n        });\r\n    }\r\n    render() {\r\n        let customStyle = {\r\n            paddingRight: '10px',\r\n            paddingLeft: '10px',\r\n        }\r\n        return (\r\n            <nav>\r\n                <div className=\"nav-wrapper red darken\">\r\n                    <a href=\"#\" className=\"brand-logo\" style={customStyle}>\r\n                         WPReader\r\n                    </a>\r\n                    <a href=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></a>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                        <li><a href=\"sass.html\">Sass</a></li>\r\n                        <li><a href=\"badges.html\">Components</a></li>\r\n                        <li><a href=\"collapsible.html\">Javascript</a></li>\r\n                        <li><a href=\"mobile.html\">Mobile</a></li>\r\n                    </ul>\r\n                </div>\r\n                <ul className=\"sidenav\" id=\"mobile-demo\">\r\n                    <li><a href=\"sass.html\">Sass</a></li>\r\n                    <li><a href=\"badges.html\">Components</a></li>\r\n                    <li><a href=\"collapsible.html\">Javascript</a></li>\r\n                    <li><a href=\"mobile.html\">Mobile</a></li>\r\n                </ul>\r\n            </nav>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n{/* <nav>\r\n                <div className=\"nav-wrapper red darken\">\r\n                    <a href=\"#\" className=\"brand-logo\">Categorizr</a>\r\n                    <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\r\n                        <li><a href=\"sass.html\">About</a></li>\r\n                        <li><a href=\"badges.html\">Terms & Conditions</a></li>\r\n                    </ul>\r\n                </div>\r\n            </nav> */}","import React, { Component } from 'react'\r\nimport Categories from './Categories'\r\nimport axios from 'axios'\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\nimport './App.css'\r\n\r\nimport Header from './Header'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    items: null,\r\n    posts: null,\r\n    website: null,\r\n    loading: false\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      website: e.target.value\r\n    })\r\n  }\r\n\r\n  handleClick = (id) => {\r\n    console.log('Clicked ' + id);\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    axios.get(\"https://\" + this.state.website + \"/wp-json/wp/v2/posts?per_page=20&categories=\" + id)\r\n      .then((response) => {\r\n        this.setState({\r\n          posts: response.data,\r\n          loading: false\r\n        })\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error)\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      });\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    console.log(\"https://\" + this.state.website + \"/wp-json/wp/v2/categories/?per_page=100\");\r\n    axios.get(\"https://\" + this.state.website + \"/wp-json/wp/v2/categories/?per_page=100\")\r\n      .then((response) => {\r\n        this.setState({\r\n          items: response.data,\r\n          loading: false,\r\n          posts: null\r\n        })\r\n      })\r\n      .catch(function (error) {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        console.log(error);\r\n      })\r\n  }\r\n  render() {\r\n    let posts = this.state.posts;\r\n    let data = posts ? (\r\n      posts.map(post => {\r\n        return (\r\n          <div className=\"col s12 m6\" key={post.id}>\r\n            <div className=\"card\">\r\n              <div className=\"card-content\">\r\n                <span className=\"card-title\" dangerouslySetInnerHTML={{ __html: post.title.rendered }}></span>\r\n                <p dangerouslySetInnerHTML={{ __html: post.excerpt.rendered }}></p>\r\n              </div>\r\n              <div className=\"card-action\">\r\n                <a href={post.link} target=\"_blank\" rel=\"noopener noreferrer\">View Post</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    ) : (\r\n        <div className=\"chip\">\r\n          No Posts Yet\r\n      </div>\r\n      );\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"section\">\r\n          <div className=\"container\">\r\n            <form action=\"\" onSubmit={this.handleSubmit}>\r\n              <div className=\"row\">\r\n                <div className=\"input-field col s12\">\r\n                  <input type=\"text\" className=\"validate\" id=\"website\" placeholder=\"www.techcrunch.com\" onChange={this.handleChange} />\r\n                  <label htmlFor=\"website\">http://</label>\r\n                </div>\r\n                {\r\n                  this.state.loading ?\r\n                    <div className=\"progress\">\r\n                      <div className=\"indeterminate\"></div>\r\n                    </div> : null\r\n                }\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"align-middle\">\r\n            <div className=\"row\">\r\n              <div className=\"col m4 s12\">\r\n                <Categories items={this.state.items} handleClick={this.handleClick} />\r\n              </div>\r\n              <div className=\"col m8 s12 bar\">\r\n                {data}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}